{"prog": "python -m spacy", "help": "spaCy Command-line Interface\n\nDOCS: https://spacy.io/api/cli", "version": null, "extra_key": "_extra", "commands": {"project": {"name": "project", "args": [], "description": "Command-line interface for spaCy projects and templates.\nYou'd typically start by cloning a project template to a local directory and\nfetching its assets like datasets etc. See the project's project.yml for the\navailable commands.\n", "allow_extra": false, "parent": null, "is_placeholder": true}, "debug": {"name": "debug", "args": [], "description": "Suite of helpful commands for debugging and profiling. Includes\ncommands to check and validate your config files, training and evaluation data,\nand custom model implementations.\n", "allow_extra": false, "parent": null, "is_placeholder": true}, "benchmark": {"name": "benchmark", "args": [], "description": "Commands for benchmarking pipelines.", "allow_extra": false, "parent": null, "is_placeholder": true}, "init": {"name": "init", "args": [], "description": "Commands for initializing configs and pipeline packages.", "allow_extra": false, "parent": null, "is_placeholder": true}, "download": {"name": "download", "args": [{"id": "model", "option": null, "short": null, "orig_help": "Name of pipeline package to download", "default": "==SUPPRESS==", "help": "Name of pipeline package to download (str)", "action": null, "choices": null, "has_converter": false}, {"id": "direct", "option": "--direct", "short": "-D", "orig_help": "Force direct download of name + version", "default": "False", "help": "Force direct download of name + version (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "sdist", "option": "--sdist", "short": "-S", "orig_help": "Download sdist (.tar.gz) archive instead of pre-built binary wheel", "default": "False", "help": "Download sdist (.tar.gz) archive instead of pre-built binary wheel (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "\n    Download compatible trained pipeline from the default download path using\n    pip. If --direct flag is set, the command expects the full package name with\n    version. For direct downloads, the compatibility check will be skipped. All\n    additional arguments provided to this command will be passed to `pip install`\n    on package installation.\n\n    DOCS: https://spacy.io/api/cli#download\n    AVAILABLE PACKAGES: https://spacy.io/models\n    ", "allow_extra": true, "parent": null, "is_placeholder": false}, "info": {"name": "info", "args": [{"id": "model", "option": null, "short": null, "orig_help": "Optional loadable spaCy pipeline", "default": "None", "help": "Optional loadable spaCy pipeline (str)", "action": null, "choices": null, "has_converter": false}, {"id": "markdown", "option": "--markdown", "short": "-md", "orig_help": "Generate Markdown for GitHub issues", "default": "False", "help": "Generate Markdown for GitHub issues (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "silent", "option": "--silent", "short": "-S", "orig_help": "Don't print anything (just return)", "default": "False", "help": "Don't print anything (just return) (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "exclude", "option": "--exclude", "short": "-e", "orig_help": "Keys to exclude from the print-out", "default": "[]", "help": "Keys to exclude from the print-out (str)", "action": "append", "choices": null, "has_converter": false}, {"id": "url", "option": "--url", "short": "-u", "orig_help": "Print the URL to download the most recent compatible version of the pipeline", "default": "False", "help": "Print the URL to download the most recent compatible version of the pipeline (bool)", "action": "store_true", "choices": null, "has_converter": false}], "description": "\n    Print info about spaCy installation. If a pipeline is specified as an argument,\n    print its meta information. Flag --markdown prints details in Markdown for easy\n    copy-pasting to GitHub issues.\n\n    Flag --url prints only the download URL of the most recent compatible\n    version of the pipeline.\n\n    DOCS: https://spacy.io/api/cli#info\n    ", "allow_extra": false, "parent": null, "is_placeholder": false}, "package": {"name": "package", "args": [{"id": "input_dir", "option": null, "short": null, "orig_help": "Directory with pipeline data", "default": "==SUPPRESS==", "help": "Directory with pipeline data (convert_existing_dir_path)", "action": null, "choices": null, "has_converter": false}, {"id": "output_dir", "option": null, "short": null, "orig_help": "Output parent directory", "default": "==SUPPRESS==", "help": "Output parent directory (convert_existing_dir_path)", "action": null, "choices": null, "has_converter": false}, {"id": "code_paths", "option": "--code", "short": "-c", "orig_help": "Comma-separated paths to Python file with additional code (registered functions) to be included in the package", "default": "[]", "help": "Comma-separated paths to Python file with additional code (registered functions) to be included in the package (List[pathlib.Path])", "action": null, "choices": null, "has_converter": true}, {"id": "meta_path", "option": "--meta", "short": "-m", "orig_help": "Path to meta.json", "default": "None", "help": "Path to meta.json (None)", "action": null, "choices": null, "has_converter": true}, {"id": "create_meta", "option": "--create-meta", "short": "-C", "orig_help": "Create meta.json, even if one exists", "default": "False", "help": "Create meta.json, even if one exists (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "name", "option": "--name", "short": "-n", "orig_help": "Package name to override meta", "default": "None", "help": "Package name to override meta (str)", "action": null, "choices": null, "has_converter": false}, {"id": "version", "option": "--version", "short": "-v", "orig_help": "Package version to override meta", "default": "None", "help": "Package version to override meta (str)", "action": null, "choices": null, "has_converter": false}, {"id": "build", "option": "--build", "short": "-b", "orig_help": "Artifact to build. Can be set multiple times, 'sdist', 'wheel' or 'none'", "default": "['sdist']", "help": "Artifact to build. Can be set multiple times, 'sdist', 'wheel' or 'none' (str)", "action": "append", "choices": ["sdist", "wheel", "none"], "has_converter": false}, {"id": "force", "option": "--force", "short": "-F", "orig_help": "Force overwriting existing data in output directory", "default": "False", "help": "Force overwriting existing data in output directory (bool)", "action": "store_true", "choices": null, "has_converter": false}], "description": "\n    Generate an installable Python package for a pipeline. Includes binary data,\n    meta and required installation files. A new directory will be created in the\n    specified output directory, and the data will be copied over. If\n    --create-meta is set and a meta.json already exists in the output directory,\n    the existing values will be used as the defaults in the command-line prompt.\n    After packaging, \"python setup.py sdist\" is run in the package directory,\n    which will create a .tar.gz archive that can be installed via \"pip install\".\n\n    If additional code files are provided (e.g. Python files containing custom\n    registered functions like pipeline components), they are copied into the\n    package and imported in the __init__.py.\n\n    DOCS: https://spacy.io/api/cli#package\n    ", "allow_extra": false, "parent": null, "is_placeholder": false}, "train": {"name": "train", "args": [{"id": "config_path", "option": null, "short": null, "orig_help": "Path to config file", "default": "==SUPPRESS==", "help": "Path to config file (convert_existing_file_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "output_path", "option": "--output", "short": "-o", "orig_help": "Output directory to store trained pipeline in", "default": "None", "help": "Output directory to store trained pipeline in (Path)", "action": null, "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (Path)", "action": null, "choices": null, "has_converter": false}, {"id": "verbose", "option": "--verbose", "short": "-V", "orig_help": "Display more information for debugging purposes", "default": "False", "help": "Display more information for debugging purposes (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "\n    Train or update a spaCy pipeline. Requires data in spaCy's binary format. To\n    convert data from other formats, use the `spacy convert` command. The\n    config file includes all settings and hyperparameters used during training.\n    To override settings in the config, e.g. settings that point to local\n    paths or that you want to experiment with, you can override them as\n    command line options. For instance, --training.batch_size 128 overrides\n    the value of \"batch_size\" in the block \"[training]\". The --code argument\n    lets you pass in a Python file that's imported before training. It can be\n    used to register custom functions and architectures that can then be\n    referenced in the config.\n\n    DOCS: https://spacy.io/api/cli#train\n    ", "allow_extra": true, "parent": null, "is_placeholder": false}, "assemble": {"name": "assemble", "args": [{"id": "config_path", "option": null, "short": null, "orig_help": "Path to config file", "default": "==SUPPRESS==", "help": "Path to config file (convert_existing_file_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "output_path", "option": null, "short": null, "orig_help": "Output directory to store assembled pipeline in", "default": "None", "help": "Output directory to store assembled pipeline in (Path)", "action": null, "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "verbose", "option": "--verbose", "short": "-V", "orig_help": "Display more information for debugging purposes", "default": "False", "help": "Display more information for debugging purposes (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "\n    Assemble a spaCy pipeline from a config file. The config file includes\n    all settings for initializing the pipeline. To override settings in the\n    config, e.g. settings that point to local paths or that you want to\n    experiment with, you can override them as command line options. The\n    --code argument lets you pass in a Python file that can be used to\n    register custom functions that are referenced in the config.\n\n    DOCS: https://spacy.io/api/cli#assemble\n    ", "allow_extra": true, "parent": null, "is_placeholder": false}, "pretrain": {"name": "pretrain", "args": [{"id": "config_path", "option": null, "short": null, "orig_help": "Path to config file", "default": "==SUPPRESS==", "help": "Path to config file (convert_existing_file_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "output_dir", "option": null, "short": null, "orig_help": "Directory to write weights to on each epoch", "default": "==SUPPRESS==", "help": "Directory to write weights to on each epoch (Path)", "action": null, "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "resume_path", "option": "--resume-path", "short": "-r", "orig_help": "Path to pretrained weights from which to resume pretraining", "default": "None", "help": "Path to pretrained weights from which to resume pretraining (None)", "action": null, "choices": null, "has_converter": true}, {"id": "epoch_resume", "option": "--epoch-resume", "short": "-er", "orig_help": "The epoch to resume counting from when using --resume-path. Prevents unintended overwriting of existing weight files.", "default": "None", "help": "The epoch to resume counting from when using --resume-path. Prevents unintended overwriting of existing weight files. (int)", "action": null, "choices": null, "has_converter": false}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "\n    Pre-train the 'token-to-vector' (tok2vec) layer of pipeline components,\n    using an approximate language-modelling objective. Two objective types\n    are available, vector-based and character-based.\n\n    In the vector-based objective, we load word vectors that have been trained\n    using a word2vec-style distributional similarity algorithm, and train a\n    component like a CNN, BiLSTM, etc to predict vectors which match the\n    pretrained ones. The weights are saved to a directory after each epoch. You\n    can then pass a path to one of these pretrained weights files to the\n    'spacy train' command.\n\n    This technique may be especially helpful if you have little labelled data.\n    However, it's still quite experimental, so your mileage may vary.\n\n    To load the weights back in during 'spacy train', you need to ensure\n    all settings are the same between pretraining and training. Ideally,\n    this is done by using the same config file for both commands.\n\n    DOCS: https://spacy.io/api/cli#pretrain\n    ", "allow_extra": true, "parent": null, "is_placeholder": false}, "evaluate": {"name": "evaluate", "args": [{"id": "model", "option": null, "short": null, "orig_help": "Model name or path", "default": "==SUPPRESS==", "help": "Model name or path (str)", "action": null, "choices": null, "has_converter": false}, {"id": "data_path", "option": null, "short": null, "orig_help": "Location of binary evaluation data in .spacy format", "default": "==SUPPRESS==", "help": "Location of binary evaluation data in .spacy format (convert_existing_path)", "action": null, "choices": null, "has_converter": false}, {"id": "output", "option": "--output", "short": "-o", "orig_help": "Output JSON file for metrics", "default": "None", "help": "Output JSON file for metrics (None)", "action": null, "choices": null, "has_converter": true}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "gold_preproc", "option": "--gold-preproc", "short": "-G", "orig_help": "Use gold preprocessing", "default": "False", "help": "Use gold preprocessing (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "displacy_path", "option": "--displacy-path", "short": "-dp", "orig_help": "Directory to output rendered parses as HTML", "default": "None", "help": "Directory to output rendered parses as HTML (None)", "action": null, "choices": null, "has_converter": true}, {"id": "displacy_limit", "option": "--displacy-limit", "short": "-dl", "orig_help": "Limit of parses to render as HTML", "default": "25", "help": "Limit of parses to render as HTML (int)", "action": null, "choices": null, "has_converter": false}], "description": "\n    Evaluate a trained pipeline. Expects a loadable spaCy pipeline and evaluation\n    data in the binary .spacy format. The --gold-preproc option sets up the\n    evaluation examples with gold-standard sentences and tokens for the\n    predictions. Gold preprocessing helps the annotations align to the\n    tokenization, and may result in sequences of more consistent length. However,\n    it may reduce runtime accuracy due to train/test skew. To render a sample of\n    dependency parses in a HTML file, set as output directory as the\n    displacy_path argument.\n\n    DOCS: https://spacy.io/api/cli#benchmark-accuracy\n    ", "allow_extra": false, "parent": null, "is_placeholder": false}, "apply": {"name": "apply", "args": [{"id": "model", "option": null, "short": null, "orig_help": "Model name or path", "default": "==SUPPRESS==", "help": "Model name or path (str)", "action": null, "choices": null, "has_converter": false}, {"id": "data_path", "option": null, "short": null, "orig_help": "Location of the documents to predict on.\nCan be a single file in .spacy format or a .jsonl file.\nFiles with other extensions are treated as single plain text documents.\nIf a directory is provided it is traversed recursively to grab\nall files to be processed.\nThe files can be a mixture of .spacy, .jsonl and text files.\nIf .jsonl is provided the specified field is going\nto be grabbed (\"text\" by default).", "default": "==SUPPRESS==", "help": "Location of the documents to predict on.\nCan be a single file in .spacy format or a .jsonl file.\nFiles with other extensions are treated as single plain text documents.\nIf a directory is provided it is traversed recursively to grab\nall files to be processed.\nThe files can be a mixture of .spacy, .jsonl and text files.\nIf .jsonl is provided the specified field is going\nto be grabbed (\"text\" by default). (convert_existing_path)", "action": null, "choices": null, "has_converter": false}, {"id": "output_file", "option": null, "short": null, "orig_help": "Path to save the resulting .spacy file", "default": "==SUPPRESS==", "help": "Path to save the resulting .spacy file (Path)", "action": null, "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "text_key", "option": "--text-key", "short": "-tk", "orig_help": "Key containing text string for JSONL", "default": "text", "help": "Key containing text string for JSONL (str)", "action": null, "choices": null, "has_converter": false}, {"id": "force_overwrite", "option": "--force", "short": "-F", "orig_help": "Force overwriting the output file", "default": "False", "help": "Force overwriting the output file (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "batch_size", "option": "--batch-size", "short": "-b", "orig_help": "Batch size", "default": "1", "help": "Batch size (int)", "action": null, "choices": null, "has_converter": false}, {"id": "n_process", "option": "--n-process", "short": "-n", "orig_help": "Number of processors to use", "default": "1", "help": "Number of processors to use (int)", "action": null, "choices": null, "has_converter": false}], "description": "\n    Apply a trained pipeline to documents to get predictions.\n    Expects a loadable spaCy pipeline and path to the data, which\n    can be a directory or a file.\n    The data files can be provided in multiple formats:\n        1. .spacy files\n        2. .jsonl files with a specified \"field\" to read the text from.\n        3. Files with any other extension are assumed to be containing\n           a single document.\n    DOCS: https://spacy.io/api/cli#apply\n    ", "allow_extra": false, "parent": null, "is_placeholder": false}, "convert": {"name": "convert", "args": [{"id": "input_path", "option": null, "short": null, "orig_help": "Input file or directory", "default": "==SUPPRESS==", "help": "Input file or directory (convert_existing_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "output_dir", "option": null, "short": null, "orig_help": "Output directory. '-' for stdout.", "default": "-", "help": "Output directory. '-' for stdout. (convert_existing_dir_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "file_type", "option": "--file-type", "short": "-t", "orig_help": "Type of data to produce", "default": "spacy", "help": "Type of data to produce (str)", "action": null, "choices": ["json", "spacy"], "has_converter": false}, {"id": "n_sents", "option": "--n-sents", "short": "-n", "orig_help": "Number of sentences per doc (0 to disable)", "default": "1", "help": "Number of sentences per doc (0 to disable) (int)", "action": null, "choices": null, "has_converter": false}, {"id": "seg_sents", "option": "--seg-sents", "short": "-s", "orig_help": "Segment sentences (for -c ner)", "default": "False", "help": "Segment sentences (for -c ner) (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "model", "option": "--model", "short": "-b", "orig_help": "Trained spaCy pipeline for sentence segmentation to use as base (for --seg-sents)", "default": "None", "help": "Trained spaCy pipeline for sentence segmentation to use as base (for --seg-sents) (str)", "action": null, "choices": null, "has_converter": false}, {"id": "morphology", "option": "--morphology", "short": "-m", "orig_help": "Enable appending morphology to tags", "default": "False", "help": "Enable appending morphology to tags (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "merge_subtokens", "option": "--merge-subtokens", "short": "-T", "orig_help": "Merge CoNLL-U subtokens", "default": "False", "help": "Merge CoNLL-U subtokens (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "converter", "option": "--converter", "short": "-c", "orig_help": "Converter to use", "default": "auto", "help": "Converter to use (str)", "action": null, "choices": ["auto", "conllubio", "conllu", "conll", "ner", "iob", "json"], "has_converter": false}, {"id": "ner_map", "option": "--ner-map", "short": "-nm", "orig_help": "NER tag mapping (as JSON-encoded dict of entity types)", "default": "None", "help": "NER tag mapping (as JSON-encoded dict of entity types) (None)", "action": null, "choices": null, "has_converter": true}, {"id": "lang", "option": "--lang", "short": "-l", "orig_help": "Language (if tokenizer required)", "default": "None", "help": "Language (if tokenizer required) (str)", "action": null, "choices": null, "has_converter": false}, {"id": "concatenate", "option": "--concatenate", "short": "-C", "orig_help": "Concatenate output to a single file", "default": "False", "help": "Concatenate output to a single file (bool)", "action": "store_true", "choices": null, "has_converter": false}], "description": "\n    Convert files into json or DocBin format for training. The resulting .spacy\n    file can be used with the train command and other experiment management\n    functions.\n\n    If no output_dir is specified and the output format is JSON, the data\n    is written to stdout, so you can pipe them forward to a JSON file:\n    $ spacy convert some_file.conllu --file-type json > some_file.json\n\n    DOCS: https://spacy.io/api/cli#convert\n    ", "allow_extra": false, "parent": null, "is_placeholder": false}, "validate": {"name": "validate", "args": [], "description": "\n    Validate the currently installed pipeline packages and spaCy version. Checks\n    if the installed packages are compatible and shows upgrade instructions if\n    available. Should be run after `pip install -U spacy`.\n\n    DOCS: https://spacy.io/api/cli#validate\n    ", "allow_extra": false, "parent": null, "is_placeholder": false}, "find-threshold": {"name": "find-threshold", "args": [{"id": "model", "option": null, "short": null, "orig_help": "Model name or path", "default": "==SUPPRESS==", "help": "Model name or path (str)", "action": null, "choices": null, "has_converter": false}, {"id": "data_path", "option": null, "short": null, "orig_help": "Location of binary evaluation data in .spacy format", "default": "==SUPPRESS==", "help": "Location of binary evaluation data in .spacy format (convert_existing_path)", "action": null, "choices": null, "has_converter": false}, {"id": "pipe_name", "option": null, "short": null, "orig_help": "Name of pipe to examine thresholds for", "default": "==SUPPRESS==", "help": "Name of pipe to examine thresholds for (str)", "action": null, "choices": null, "has_converter": false}, {"id": "threshold_key", "option": null, "short": null, "orig_help": "Key of threshold attribute in component's configuration", "default": "==SUPPRESS==", "help": "Key of threshold attribute in component's configuration (str)", "action": null, "choices": null, "has_converter": false}, {"id": "scores_key", "option": null, "short": null, "orig_help": "Metric to optimize", "default": "==SUPPRESS==", "help": "Metric to optimize (str)", "action": null, "choices": null, "has_converter": false}, {"id": "n_trials", "option": "--n_trials", "short": "-n", "orig_help": "Number of trials to determine optimal thresholds", "default": "11", "help": "Number of trials to determine optimal thresholds (int)", "action": null, "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "gold_preproc", "option": "--gold-preproc", "short": "-G", "orig_help": "Use gold preprocessing", "default": "False", "help": "Use gold preprocessing (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "verbose", "option": "--verbose", "short": "-V", "orig_help": "Display more information for debugging purposes", "default": "False", "help": "Display more information for debugging purposes (bool)", "action": "store_true", "choices": null, "has_converter": false}], "description": "\n    Runs prediction trials for a trained model with varying tresholds to maximize\n    the specified metric. The search space for the threshold is traversed linearly\n    from 0 to 1 in `n_trials` steps. Results are displayed in a table on `stdout`\n    (the corresponding API call to `spacy.cli.find_threshold.find_threshold()`\n    returns all results).\n\n    This is applicable only for components whose predictions are influenced by\n    thresholds - e.g. `textcat_multilabel` and `spancat`, but not `textcat`. Note\n    that the full path to the corresponding threshold attribute in the config has to\n    be provided.\n\n    DOCS: https://spacy.io/api/cli#find-threshold\n    ", "allow_extra": false, "parent": null, "is_placeholder": false}}, "subcommands": {"benchmark": {"speed": {"name": "speed", "args": [{"id": "model", "option": null, "short": null, "orig_help": "Model name or path", "default": "==SUPPRESS==", "help": "Model name or path (str)", "action": null, "choices": null, "has_converter": false}, {"id": "data_path", "option": null, "short": null, "orig_help": "Location of binary evaluation data in .spacy format", "default": "==SUPPRESS==", "help": "Location of binary evaluation data in .spacy format (convert_existing_path)", "action": null, "choices": null, "has_converter": false}, {"id": "batch_size", "option": "--batch-size", "short": "-b", "orig_help": "Override the pipeline batch size", "default": "None", "help": "Override the pipeline batch size (int)", "action": null, "choices": null, "has_converter": false}, {"id": "no_shuffle", "option": "--no-shuffle", "short": null, "orig_help": "Do not shuffle benchmark data", "default": "False", "help": "Do not shuffle benchmark data (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "n_batches", "option": "--batches", "short": null, "orig_help": "Minimum number of batches to benchmark", "default": "50", "help": "Minimum number of batches to benchmark (int)", "action": null, "choices": null, "has_converter": false}, {"id": "warmup_epochs", "option": "--warmup", "short": "-w", "orig_help": "Number of iterations over the data for warmup", "default": "3", "help": "Number of iterations over the data for warmup (int)", "action": null, "choices": null, "has_converter": false}], "description": "\n    Benchmark a pipeline. Expects a loadable spaCy pipeline and benchmark\n    data in the binary .spacy format.\n    ", "allow_extra": false, "parent": "benchmark", "is_placeholder": false}, "accuracy": {"name": "accuracy", "args": [{"id": "model", "option": null, "short": null, "orig_help": "Model name or path", "default": "==SUPPRESS==", "help": "Model name or path (str)", "action": null, "choices": null, "has_converter": false}, {"id": "data_path", "option": null, "short": null, "orig_help": "Location of binary evaluation data in .spacy format", "default": "==SUPPRESS==", "help": "Location of binary evaluation data in .spacy format (convert_existing_path)", "action": null, "choices": null, "has_converter": false}, {"id": "output", "option": "--output", "short": "-o", "orig_help": "Output JSON file for metrics", "default": "None", "help": "Output JSON file for metrics (None)", "action": null, "choices": null, "has_converter": true}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "gold_preproc", "option": "--gold-preproc", "short": "-G", "orig_help": "Use gold preprocessing", "default": "False", "help": "Use gold preprocessing (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "displacy_path", "option": "--displacy-path", "short": "-dp", "orig_help": "Directory to output rendered parses as HTML", "default": "None", "help": "Directory to output rendered parses as HTML (None)", "action": null, "choices": null, "has_converter": true}, {"id": "displacy_limit", "option": "--displacy-limit", "short": "-dl", "orig_help": "Limit of parses to render as HTML", "default": "25", "help": "Limit of parses to render as HTML (int)", "action": null, "choices": null, "has_converter": false}], "description": "\n    Evaluate a trained pipeline. Expects a loadable spaCy pipeline and evaluation\n    data in the binary .spacy format. The --gold-preproc option sets up the\n    evaluation examples with gold-standard sentences and tokens for the\n    predictions. Gold preprocessing helps the annotations align to the\n    tokenization, and may result in sequences of more consistent length. However,\n    it may reduce runtime accuracy due to train/test skew. To render a sample of\n    dependency parses in a HTML file, set as output directory as the\n    displacy_path argument.\n\n    DOCS: https://spacy.io/api/cli#benchmark-accuracy\n    ", "allow_extra": false, "parent": "benchmark", "is_placeholder": false}}, "debug": {"profile": {"name": "profile", "args": [{"id": "model", "option": null, "short": null, "orig_help": "Trained pipeline to load", "default": "==SUPPRESS==", "help": "Trained pipeline to load (str)", "action": null, "choices": null, "has_converter": false}, {"id": "inputs", "option": null, "short": null, "orig_help": "Location of input file. '-' for stdin.", "default": "None", "help": "Location of input file. '-' for stdin. (None)", "action": null, "choices": null, "has_converter": true}, {"id": "n_texts", "option": "--n-texts", "short": "-n", "orig_help": "Maximum number of texts to use if available", "default": "10000", "help": "Maximum number of texts to use if available (int)", "action": null, "choices": null, "has_converter": false}], "description": "\n    Profile which functions take the most time in a spaCy pipeline.\n    Input should be formatted as one JSON object per line with a key \"text\".\n    It can either be provided as a JSONL file, or be read from sys.sytdin.\n    If no input file is specified, the IMDB dataset is loaded via Thinc.\n\n    DOCS: https://spacy.io/api/cli#debug-profile\n    ", "allow_extra": false, "parent": "debug", "is_placeholder": false}, "data": {"name": "data", "args": [{"id": "config_path", "option": null, "short": null, "orig_help": "Path to config file", "default": "==SUPPRESS==", "help": "Path to config file (convert_existing_file_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "ignore_warnings", "option": "--ignore-warnings", "short": "-IW", "orig_help": "Ignore warnings, only show stats and errors", "default": "False", "help": "Ignore warnings, only show stats and errors (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "verbose", "option": "--verbose", "short": "-V", "orig_help": "Print additional information and explanations", "default": "False", "help": "Print additional information and explanations (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "no_format", "option": "--no-format", "short": "-NF", "orig_help": "Don't pretty-print the results", "default": "False", "help": "Don't pretty-print the results (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "\n    Analyze, debug and validate your training and development data. Outputs\n    useful stats, and can help you find problems like invalid entity annotations,\n    cyclic dependencies, low data labels and more.\n\n    DOCS: https://spacy.io/api/cli#debug-data\n    ", "allow_extra": true, "parent": "debug", "is_placeholder": false}, "config": {"name": "config", "args": [{"id": "config_path", "option": null, "short": null, "orig_help": "Path to config file", "default": "==SUPPRESS==", "help": "Path to config file (convert_existing_file_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "show_funcs", "option": "--show-functions", "short": "-F", "orig_help": "Show an overview of all registered functions used in the config and where they come from (modules, files etc.)", "default": "False", "help": "Show an overview of all registered functions used in the config and where they come from (modules, files etc.) (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "show_vars", "option": "--show-variables", "short": "-V", "orig_help": "Show an overview of all variables referenced in the config and their values. This will also reflect variables overwritten on the CLI", "default": "False", "help": "Show an overview of all variables referenced in the config and their values. This will also reflect variables overwritten on the CLI (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "Debug a config file and show validation errors. The command will\n    create all objects in the tree and validate them. Note that some config\n    validation errors are blocking and will prevent the rest of the config from\n    being resolved. This means that you may not see all validation errors at\n    once and some issues are only shown once previous errors have been fixed.\n    Similar as with the 'train' command, you can override settings from the config\n    as command line options. For instance, --training.batch_size 128 overrides\n    the value of \"batch_size\" in the block \"[training]\".\n\n    DOCS: https://spacy.io/api/cli#debug-config\n    ", "allow_extra": true, "parent": "debug", "is_placeholder": false}, "model": {"name": "model", "args": [{"id": "config_path", "option": null, "short": null, "orig_help": "Path to config file", "default": "==SUPPRESS==", "help": "Path to config file (convert_existing_file_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "component", "option": null, "short": null, "orig_help": "Name of the pipeline component of which the model should be analyzed", "default": "==SUPPRESS==", "help": "Name of the pipeline component of which the model should be analyzed (str)", "action": null, "choices": null, "has_converter": false}, {"id": "layers", "option": null, "short": null, "orig_help": "Comma-separated names of layer IDs to print", "default": "[]", "help": "Comma-separated names of layer IDs to print (List[int])", "action": null, "choices": null, "has_converter": true}, {"id": "dimensions", "option": "--dimensions", "short": "-DIM", "orig_help": "Show dimensions", "default": "False", "help": "Show dimensions (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "parameters", "option": "--parameters", "short": "-PAR", "orig_help": "Show parameters", "default": "False", "help": "Show parameters (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "gradients", "option": "--gradients", "short": "-GRAD", "orig_help": "Show gradients", "default": "False", "help": "Show gradients (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "attributes", "option": "--attributes", "short": "-ATTR", "orig_help": "Show attributes", "default": "False", "help": "Show attributes (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "P0", "option": "--print-step0", "short": "-P0", "orig_help": "Print model before training", "default": "False", "help": "Print model before training (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "P1", "option": "--print-step1", "short": "-P1", "orig_help": "Print model after initialization", "default": "False", "help": "Print model after initialization (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "P2", "option": "--print-step2", "short": "-P2", "orig_help": "Print model after training", "default": "False", "help": "Print model after training (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "P3", "option": "--print-step3", "short": "-P3", "orig_help": "Print final predictions", "default": "False", "help": "Print final predictions (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "\n    Analyze a Thinc model implementation. Includes checks for internal structure\n    and activations during training.\n\n    DOCS: https://spacy.io/api/cli#debug-model\n    ", "allow_extra": true, "parent": "debug", "is_placeholder": false}, "diff-config": {"name": "diff-config", "args": [{"id": "config_path", "option": null, "short": null, "orig_help": "Path to config file", "default": "==SUPPRESS==", "help": "Path to config file (convert_existing_file_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "compare_to", "option": null, "short": null, "orig_help": "Path to a config file to diff against, or `None` to compare against default settings", "default": "None", "help": "Path to a config file to diff against, or `None` to compare against default settings (None)", "action": null, "choices": null, "has_converter": true}, {"id": "optimize", "option": "--optimize", "short": "-o", "orig_help": "Whether the user config was optimized for efficiency or accuracy. Only relevant when comparing against the default config", "default": "efficiency", "help": "Whether the user config was optimized for efficiency or accuracy. Only relevant when comparing against the default config (str)", "action": null, "choices": ["efficiency", "accuracy"], "has_converter": false}, {"id": "gpu", "option": "--gpu", "short": "-G", "orig_help": "Whether the original config can run on a GPU. Only relevant when comparing against the default config", "default": "False", "help": "Whether the original config can run on a GPU. Only relevant when comparing against the default config (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "pretraining", "option": "--pretraining", "short": "--pt", "orig_help": "Whether to compare on a config with pretraining involved. Only relevant when comparing against the default config", "default": "False", "help": "Whether to compare on a config with pretraining involved. Only relevant when comparing against the default config (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "markdown", "option": "--markdown", "short": "-md", "orig_help": "Generate Markdown for GitHub issues", "default": "False", "help": "Generate Markdown for GitHub issues (bool)", "action": "store_true", "choices": null, "has_converter": false}], "description": "Show a diff of a config file with respect to spaCy's defaults or another config file. If\n    additional settings were used in the creation of the config file, then you\n    must supply these as extra parameters to the command when comparing to the default settings. The generated diff\n    can also be used when posting to the discussion forum to provide more\n    information for the maintainers.\n\n    The `optimize`, `gpu`, and `pretraining` options are only relevant when\n    comparing against the default configuration (or specifically when `compare_to` is None).\n\n    DOCS: https://spacy.io/api/cli#debug-diff\n    ", "allow_extra": false, "parent": "debug", "is_placeholder": false}}, "init": {"config": {"name": "config", "args": [{"id": "output_file", "option": null, "short": null, "orig_help": "File to save the config to or - for stdout (will only output config and no additional logging info)", "default": "==SUPPRESS==", "help": "File to save the config to or - for stdout (will only output config and no additional logging info) (convert_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "lang", "option": "--lang", "short": "-l", "orig_help": "Code of the language to use", "default": "en", "help": "Code of the language to use (str)", "action": null, "choices": null, "has_converter": false}, {"id": "pipeline", "option": "--pipeline", "short": "-p", "orig_help": "Comma-separated names of trainable pipeline components to include (without 'tok2vec' or 'transformer')", "default": "['tagger', 'parser', 'ner']", "help": "Comma-separated names of trainable pipeline components to include (without 'tok2vec' or 'transformer') (List[str])", "action": null, "choices": null, "has_converter": true}, {"id": "optimize", "option": "--optimize", "short": "-o", "orig_help": "Whether to optimize for efficiency (faster inference, smaller model, lower memory consumption) or higher accuracy (potentially larger and slower model). This will impact the choice of architecture, pretrained weights and related hyperparameters.", "default": "efficiency", "help": "Whether to optimize for efficiency (faster inference, smaller model, lower memory consumption) or higher accuracy (potentially larger and slower model). This will impact the choice of architecture, pretrained weights and related hyperparameters. (str)", "action": null, "choices": ["efficiency", "accuracy"], "has_converter": false}, {"id": "gpu", "option": "--gpu", "short": "-G", "orig_help": "Whether the model can run on GPU. This will impact the choice of architecture, pretrained weights and related hyperparameters.", "default": "False", "help": "Whether the model can run on GPU. This will impact the choice of architecture, pretrained weights and related hyperparameters. (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "pretraining", "option": "--pretraining", "short": "-pt", "orig_help": "Include config for pretraining (with 'spacy pretrain')", "default": "False", "help": "Include config for pretraining (with 'spacy pretrain') (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "force_overwrite", "option": "--force", "short": "-F", "orig_help": "Force overwriting the output file", "default": "False", "help": "Force overwriting the output file (bool)", "action": "store_true", "choices": null, "has_converter": false}], "description": "\n    Generate a starter config file for training. Based on your requirements\n    specified via the CLI arguments, this command generates a config with the\n    optimal settings for your use case. This includes the choice of architecture,\n    pretrained weights and related hyperparameters.\n\n    DOCS: https://spacy.io/api/cli#init-config\n    ", "allow_extra": false, "parent": "init", "is_placeholder": false}, "fill-config": {"name": "fill-config", "args": [{"id": "base_path", "option": null, "short": null, "orig_help": "Path to base config to fill", "default": "==SUPPRESS==", "help": "Path to base config to fill (convert_existing_file_path)", "action": null, "choices": null, "has_converter": false}, {"id": "output_file", "option": null, "short": null, "orig_help": "Path to output .cfg file (or - for stdout)", "default": "-", "help": "Path to output .cfg file (or - for stdout) (convert_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "distillation", "option": "--distillation", "short": "-dt", "orig_help": "Include config for distillation (with 'spacy distill')", "default": "False", "help": "Include config for distillation (with 'spacy distill') (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "pretraining", "option": "--pretraining", "short": "-pt", "orig_help": "Include config for pretraining (with `spacy pretrain`)", "default": "False", "help": "Include config for pretraining (with `spacy pretrain`) (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "diff", "option": "--diff", "short": "-D", "orig_help": "Print a visual diff highlighting the changes", "default": "False", "help": "Print a visual diff highlighting the changes (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}], "description": "\n    Fill partial config file with default values. Will add all missing settings\n    from the default config and will create all objects, check the registered\n    functions for their default values and update the base config. This command\n    can be used with a config generated via the training quickstart widget:\n    https://spacy.io/usage/training#quickstart\n\n    DOCS: https://spacy.io/api/cli#init-fill-config\n    ", "allow_extra": false, "parent": "init", "is_placeholder": false}, "vectors": {"name": "vectors", "args": [{"id": "lang", "option": null, "short": null, "orig_help": "The language of the nlp object to create", "default": "==SUPPRESS==", "help": "The language of the nlp object to create (str)", "action": null, "choices": null, "has_converter": false}, {"id": "vectors_loc", "option": null, "short": null, "orig_help": "Vectors file in Word2Vec format", "default": "==SUPPRESS==", "help": "Vectors file in Word2Vec format (convert_existing_path)", "action": null, "choices": null, "has_converter": false}, {"id": "output_dir", "option": null, "short": null, "orig_help": "Pipeline output directory", "default": "==SUPPRESS==", "help": "Pipeline output directory (Path)", "action": null, "choices": null, "has_converter": false}, {"id": "prune", "option": "--prune", "short": "-p", "orig_help": "Optional number of vectors to prune to", "default": "-1", "help": "Optional number of vectors to prune to (int)", "action": null, "choices": null, "has_converter": false}, {"id": "truncate", "option": "--truncate", "short": "-t", "orig_help": "Optional number of vectors to truncate to when reading in vectors file", "default": "0", "help": "Optional number of vectors to truncate to when reading in vectors file (int)", "action": null, "choices": null, "has_converter": false}, {"id": "mode", "option": "--mode", "short": "-m", "orig_help": "Vectors mode: default or floret", "default": "default", "help": "Vectors mode: default or floret (str)", "action": null, "choices": ["default", "floret"], "has_converter": false}, {"id": "verbose", "option": "--verbose", "short": "-V", "orig_help": "Display more information for debugging purposes", "default": "False", "help": "Display more information for debugging purposes (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "jsonl_loc", "option": "--lexemes-jsonl", "short": "-j", "orig_help": "Location of JSONL-formatted attributes file", "default": "None", "help": "Location of JSONL-formatted attributes file (Path)", "action": null, "choices": null, "has_converter": false}], "description": "Convert word vectors for use with spaCy. Will export an nlp object that\n    you can use in the [initialize] block of your config to initialize\n    a model with vectors.\n    ", "allow_extra": false, "parent": "init", "is_placeholder": false}, "nlp": {"name": "nlp", "args": [{"id": "config_path", "option": null, "short": null, "orig_help": "Path to config file", "default": "==SUPPRESS==", "help": "Path to config file (convert_existing_file_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "output_path", "option": null, "short": null, "orig_help": "Output directory for the prepared data", "default": "==SUPPRESS==", "help": "Output directory for the prepared data (Path)", "action": null, "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "verbose", "option": "--verbose", "short": "-V", "orig_help": "Display more information for debugging purposes", "default": "False", "help": "Display more information for debugging purposes (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "Initialize a pipeline.", "allow_extra": true, "parent": "init", "is_placeholder": false}, "labels": {"name": "labels", "args": [{"id": "config_path", "option": null, "short": null, "orig_help": "Path to config file", "default": "==SUPPRESS==", "help": "Path to config file (convert_existing_file_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "output_path", "option": null, "short": null, "orig_help": "Output directory for the labels", "default": "==SUPPRESS==", "help": "Output directory for the labels (Path)", "action": null, "choices": null, "has_converter": false}, {"id": "code_path", "option": "--code", "short": "-c", "orig_help": "Path to Python file with additional code (registered functions) to be imported", "default": "None", "help": "Path to Python file with additional code (registered functions) to be imported (None)", "action": null, "choices": null, "has_converter": true}, {"id": "verbose", "option": "--verbose", "short": "-V", "orig_help": "Display more information for debugging purposes", "default": "False", "help": "Display more information for debugging purposes (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "use_gpu", "option": "--gpu-id", "short": "-g", "orig_help": "GPU ID or -1 for CPU", "default": "-1", "help": "GPU ID or -1 for CPU (int)", "action": null, "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "Generate JSON files for the labels in the data. This helps speed up the\n    training process, since spaCy won't have to preprocess the data to\n    extract the labels.", "allow_extra": true, "parent": "init", "is_placeholder": false}}, "project": {"clone": {"name": "clone", "args": [{"id": "name", "option": null, "short": null, "orig_help": "The name of the template to clone", "default": "==SUPPRESS==", "help": "The name of the template to clone (str)", "action": null, "choices": null, "has_converter": false}, {"id": "dest", "option": null, "short": null, "orig_help": "Where to clone the project. Defaults to current working directory", "default": "None", "help": "Where to clone the project. Defaults to current working directory (Path)", "action": null, "choices": null, "has_converter": false}, {"id": "repo", "option": "--repo", "short": "-r", "orig_help": "The repository to clone from", "default": "https://github.com/explosion/projects", "help": "The repository to clone from (str)", "action": null, "choices": null, "has_converter": false}, {"id": "branch", "option": "--branch", "short": "-b", "orig_help": "The branch to clone from. If not provided, will attempt main, master", "default": "None", "help": "The branch to clone from. If not provided, will attempt main, master (str)", "action": null, "choices": null, "has_converter": false}, {"id": "sparse_checkout", "option": "--sparse", "short": "-S", "orig_help": "Use sparse Git checkout to only check out and clone the files needed. Requires Git v22.2+", "default": "False", "help": "Use sparse Git checkout to only check out and clone the files needed. Requires Git v22.2+ (bool)", "action": "store_true", "choices": null, "has_converter": false}], "description": "Clone a project template from a repository. Calls into \"git\" and will\n    only download the files from the given subdirectory. The GitHub repo\n    defaults to the official spaCy template repo, but can be customized\n    (including using a private repo).\n\n    DOCS: https://spacy.io/api/cli#project-clone\n    ", "allow_extra": false, "parent": "project", "is_placeholder": false}, "assets": {"name": "assets", "args": [{"id": "project_dir", "option": null, "short": null, "orig_help": "Path to cloned project. Defaults to current working directory", "default": "/Users/ines/Repos/explosion/spacy", "help": "Path to cloned project. Defaults to current working directory (convert_existing_dir_path)", "action": null, "choices": null, "has_converter": false}, {"id": "sparse_checkout", "option": "--sparse", "short": "-S", "orig_help": "Use sparse checkout for assets provided via Git, to only check out and clone the files needed. Requires Git v22.2+", "default": "False", "help": "Use sparse checkout for assets provided via Git, to only check out and clone the files needed. Requires Git v22.2+ (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "extra", "option": "--extra", "short": "-e", "orig_help": "Download all assets, including those marked as 'extra'", "default": "False", "help": "Download all assets, including those marked as 'extra' (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "Fetch project assets like datasets and pretrained weights. Assets are\n    defined in the \"assets\" section of the project.yml. If a checksum is\n    provided in the project.yml, the file is only downloaded if no local file\n    with the same checksum exists.\n\n    DOCS: https://spacy.io/api/cli#project-assets\n    ", "allow_extra": false, "parent": "project", "is_placeholder": false}, "run": {"name": "run", "args": [{"id": "subcommand", "option": null, "short": null, "orig_help": "Name of command defined in the project.yml", "default": "None", "help": "Name of command defined in the project.yml (str)", "action": null, "choices": null, "has_converter": false}, {"id": "project_dir", "option": null, "short": null, "orig_help": "Location of project directory. Defaults to current working directory.", "default": "/Users/ines/Repos/explosion/spacy", "help": "Location of project directory. Defaults to current working directory. (convert_existing_dir_path)", "action": null, "choices": null, "has_converter": false}, {"id": "force", "option": "--force", "short": "-F", "orig_help": "Force re-running steps, even if nothing changed", "default": "False", "help": "Force re-running steps, even if nothing changed (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "dry", "option": "--dry", "short": "-D", "orig_help": "Perform a dry run and don't execute scripts", "default": "False", "help": "Perform a dry run and don't execute scripts (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "show_help", "option": "--help", "short": null, "orig_help": "Show help message and available subcommands", "default": "False", "help": "Show help message and available subcommands (bool)", "action": "store_true", "choices": null, "has_converter": false}, {"id": "_extra", "option": null, "short": null, "orig_help": null, "default": "[]", "help": "(str)", "action": "append", "choices": null, "has_converter": false}], "description": "Run a named command or workflow defined in the project.yml. If a workflow\n    name is specified, all commands in the workflow are run, in order. If\n    commands define dependencies and/or outputs, they will only be re-run if\n    state has changed.\n\n    DOCS: https://spacy.io/api/cli#project-run\n    ", "allow_extra": true, "parent": "project", "is_placeholder": false}, "push": {"name": "push", "args": [{"id": "remote", "option": null, "short": null, "orig_help": "Name or path of remote storage", "default": "default", "help": "Name or path of remote storage (str)", "action": null, "choices": null, "has_converter": false}, {"id": "project_dir", "option": null, "short": null, "orig_help": "Location of project directory. Defaults to current working directory.", "default": "/Users/ines/Repos/explosion/spacy", "help": "Location of project directory. Defaults to current working directory. (convert_existing_dir_path)", "action": null, "choices": null, "has_converter": false}], "description": "\n    Persist outputs to a remote storage. You can alias remotes in your\n    project.yml by mapping them to storage paths. A storage can be anything that\n    the smart-open library can upload to, e.g. AWS, Google Cloud Storage, SSH,\n    local directories etc.\n\n    DOCS: https://spacy.io/api/cli#project-push\n    ", "allow_extra": false, "parent": "project", "is_placeholder": false}, "pull": {"name": "pull", "args": [{"id": "remote", "option": null, "short": null, "orig_help": "Name or path of remote storage", "default": "default", "help": "Name or path of remote storage (str)", "action": null, "choices": null, "has_converter": false}, {"id": "project_dir", "option": null, "short": null, "orig_help": "Location of project directory. Defaults to current working directory.", "default": "/Users/ines/Repos/explosion/spacy", "help": "Location of project directory. Defaults to current working directory. (convert_existing_dir_path)", "action": null, "choices": null, "has_converter": false}], "description": "Retrieve available precomputed outputs from a remote storage.\n    You can alias remotes in your project.yml by mapping them to storage paths.\n    A storage can be anything that the smart-open library can upload to, e.g.\n    AWS, Google Cloud Storage, SSH, local directories etc.\n\n    DOCS: https://spacy.io/api/cli#project-pull\n    ", "allow_extra": false, "parent": "project", "is_placeholder": false}, "document": {"name": "document", "args": [{"id": "project_dir", "option": null, "short": null, "orig_help": "Path to cloned project. Defaults to current working directory.", "default": "/Users/ines/Repos/explosion/spacy", "help": "Path to cloned project. Defaults to current working directory. (convert_existing_dir_path)", "action": null, "choices": null, "has_converter": false}, {"id": "output_file", "option": "--output", "short": "-o", "orig_help": "Path to output Markdown file for output. Defaults to - for standard output", "default": "-", "help": "Path to output Markdown file for output. Defaults to - for standard output (convert_path_or_dash)", "action": null, "choices": null, "has_converter": false}, {"id": "no_emoji", "option": "--no-emoji", "short": "-NE", "orig_help": "Don't use emoji", "default": "False", "help": "Don't use emoji (bool)", "action": "store_true", "choices": null, "has_converter": false}], "description": "\n    Auto-generate a README.md for a project. If the content is saved to a file,\n    hidden markers are added so you can add custom content before or after the\n    auto-generated section and only the auto-generated docs will be replaced\n    when you re-run the command.\n\n    DOCS: https://spacy.io/api/cli#project-document\n    ", "allow_extra": false, "parent": "project", "is_placeholder": false}}}}